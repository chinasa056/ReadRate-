services:
  mysql:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: pass123
      MYSQL_DATABASE: book_management
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis_server
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  app:
    build: .
    container_name: book-review-api
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    environment:
      NODE_ENV: development
      MYSQL_DATABASE: book_management
      MYSQL_USERNAME: user
      MYSQL_PASSWORD: userpass
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your_jwt_secret
      REFRESH_SECRET: your-refresh-secret
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run start:dev"
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:

# services:
#   mysql:
#     image: mysql:8
#     container_name: mysql_db
#     restart: unless-stopped
#     environment:
#       MYSQL_ROOT_PASSWORD: pass123
#       MYSQL_DATABASE: book_management
#       MYSQL_USER: user
#       MYSQL_PASSWORD: userpass
#     ports:
#       - "3306:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql
#     networks:
#       - app-network

#   redis:
#     image: redis:alpine
#     container_name: redis_server
#     restart: unless-stopped
#     ports:
#       - "6379:6379"
#     networks:
#       - app-network

# volumes:
#   mysql_data:

# networks:
#   app-network:
